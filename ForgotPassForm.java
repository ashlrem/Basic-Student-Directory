/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package StudentDir;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ash
 */
public class ForgotPassForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form ForgotPassForm
     */
    public ForgotPassForm() {
        initComponents();
        
        this.setVisible(true);
        
        age.setDocument(new JTextFieldLimit(2));
        contactno.setDocument(new JTextFieldLimit(11));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        contactno = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        AccountType = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        newpass = new javax.swing.JPasswordField();
        newpass1 = new javax.swing.JPasswordField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Forgot Password"));
        setTitle("Forgot Password Form");

        jLabel1.setText("Username");

        jLabel2.setText("Age");

        jLabel3.setText("Contact Number");

        jLabel4.setText("New Password");

        jLabel5.setText("Confirm New Password");

        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });
        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageKeyTyped(evt);
            }
        });

        contactno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactnoKeyTyped(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        AccountType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrator", "LevelOne", "LevelTwo" }));

        jLabel6.setText("Account Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(10, 10, 10)
                                .addComponent(jButton2)
                                .addGap(6, 6, 6)
                                .addComponent(jButton3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(newpass1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(contactno, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                .addComponent(AccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(user, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                .addComponent(newpass)))
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(newpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(newpass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        setBounds(300, 120, 516, 346);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Connection conn = null;

        String url = "jdbc:mysql://localhost:3306/";
        String dbName = "admin_dbs";
        Statement stmt = null;
        ResultSet result = null;
        String driver = "com.mysql.jdbc.Driver";
        String databaseUserName = "user1";
        String databasePassword = "test";
        
        try{
        conn = DriverManager.getConnection(url + dbName, databaseUserName, databasePassword);
        stmt = conn.createStatement();
        System.out.println("Connected to the database.");
        }catch(Exception e){
            System.out.println("Failed to connect ot the database.");
        }
        
        if(user.getText().equals("") || age.getText().equals("") || contactno.getText().equals("") || newpass.getText().equals("") || newpass1.getText().equals("") ){
        JOptionPane.showMessageDialog(null, "Please fill in empty fields!");
        }else{
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?");
               if(x==0){
        String acct = AccountType.getSelectedItem() + "";
        ForgotPassForm.accountType selected = ForgotPassForm.accountType.valueOf(acct);
        switch(selected){
            
            case Administrator:
                try{
                String sql = "SELECT * FROM administrator WHERE username = ? and age = ? and contactno = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st=conn.prepareStatement(sql);
                st.setString(1, user.getText());
                st.setString(2, age.getText());
                st.setString(3, contactno.getText());
                result=st.executeQuery();
                             if(result.next()){
                                 if(newpass.getText().equals(newpass1.getText())){
                                 try{
                                     String sql1 = "UPDATE administrator set password='" + newpass.getText() + "'";
                                     PreparedStatement st1 = conn.prepareStatement(sql1);
                                     st1.execute();
                                     String sql2 = "UPDATE allusers set password='" + newpass.getText() + "'";
                                     PreparedStatement st2 = conn.prepareStatement(sql2);
                                     st2.execute();
                                     JOptionPane.showMessageDialog(null, "Password successfully updated!");
                                     
                                     LoginForm lf = new LoginForm();
                                     JDesktopPane MainDesk = this.getDesktopPane();
                                     MainDesk.add(lf);
                                     this.dispose();
                                     lf.show();
                                     
                                     System.out.println("Adminstrator: Password updated");
                                 }catch(Exception e){
                                     System.out.println("Administrator failed.");
                                 }
                                 }else{
                                     JOptionPane.showMessageDialog(null, "Password do not match!");
                                 }
                               
                             }else{
                               JOptionPane.showMessageDialog(null, "Account details do not match!");
                               System.out.println("Administrator: Update fail");
                             }
                }catch(Exception e){
                    System.out.println("Administrator: Attempt failed to update password.");
                    JOptionPane.showMessageDialog(null, "Administrator: Username doesn't exist!");
                }
                break;
                
                
            case LevelOne:
                try{
                String sql = "SELECT * FROM levelone WHERE username = ? and age = ? and contactno = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st=conn.prepareStatement(sql);
                st.setString(1, user.getText());
                st.setString(2, age.getText());
                st.setString(3, contactno.getText());
                result=st.executeQuery();
                             if(result.next()){
                                 if(newpass.getText().equals(newpass1.getText())){
                                 try{
                                     String sql1 = "UPDATE levelone set password='" + newpass.getText() + "'";
                                     PreparedStatement st1 = conn.prepareStatement(sql1);
                                     st1.execute();
                                     String sql2 = "UPDATE allusers set password='" + newpass.getText() + "'";
                                     PreparedStatement st2 = conn.prepareStatement(sql2);
                                     st2.execute();
                                     JOptionPane.showMessageDialog(null, "Password successfully updated!");
                                     
                                     LoginForm lf = new LoginForm();
                                     JDesktopPane MainDesk = this.getDesktopPane();
                                     MainDesk.add(lf);
                                     this.dispose();
                                     lf.show();
                                     
                                     System.out.println("Level One: Password updated");
                                 }catch(Exception e){
                                     System.out.println("Level One failed.");
                                 }
                                 }else{
                                     JOptionPane.showMessageDialog(null, "Password do not match!");
                                 }
                               
                             }else{
                               JOptionPane.showMessageDialog(null, "Account details do not match!");
                               System.out.println("Level One: Update fail");
                             }
                }catch(Exception e){
                    System.out.println("Level One: Attempt failed to update password.");
                    JOptionPane.showMessageDialog(null, "Level One: Username doesn't exist!");
                }
                break;
                
                case LevelTwo:
                try{
                String sql = "SELECT * FROM leveltwo WHERE username = ? and age = ? and contactno = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st=conn.prepareStatement(sql);
                st.setString(1, user.getText());
                st.setString(2, age.getText());
                st.setString(3, contactno.getText());
                result=st.executeQuery();
                             if(result.next()){
                                 if(newpass.getText().equals(newpass1.getText())){
                                 try{
                                     String sql1 = "UPDATE leveltwo set password='" + newpass.getText() + "'";
                                     PreparedStatement st1 = conn.prepareStatement(sql1);
                                     st1.execute();
                                     String sql2 = "UPDATE allusers set password='" + newpass.getText() + "'";
                                     PreparedStatement st2 = conn.prepareStatement(sql2);
                                     st2.execute();
                                     JOptionPane.showMessageDialog(null, "Password successfully updated!");
                                     
                                     LoginForm lf = new LoginForm();
                                     JDesktopPane MainDesk = this.getDesktopPane();
                                     MainDesk.add(lf);
                                     this.dispose();
                                     lf.show();
                                     
                                     System.out.println("Level Two: Password updated");
                                 }catch(Exception e){
                                     System.out.println("Level Two failed.");
                                 }
                                 }else{
                                     JOptionPane.showMessageDialog(null, "Password do not match!");
                                 }
                               
                             }else{
                               JOptionPane.showMessageDialog(null, "Account details do not match!");
                               System.out.println("Level Two: Update fail");
                             }
                }catch(Exception e){
                    System.out.println("Level Two: Attempt failed to update password.");
                    JOptionPane.showMessageDialog(null, "Level Two: Username doesn't exist!");
                }
                break;
        }
        }
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        
        
        LoginForm lf = new LoginForm();
        JDesktopPane MainDesk = this.getDesktopPane();
        MainDesk.add(lf);
        this.dispose();
        lf.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyTyped

        char c = evt.getKeyChar();
        if(!Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            evt.consume();
        } 
    }//GEN-LAST:event_ageKeyTyped

    private void contactnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactnoKeyTyped

        char c = evt.getKeyChar();
        if(!Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            evt.consume();
        } 
    }//GEN-LAST:event_contactnoKeyTyped

        private enum accountType{
    
        Administrator,
        LevelOne,
        LevelTwo
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AccountType;
    private javax.swing.JTextField age;
    private javax.swing.JTextField contactno;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField newpass;
    private javax.swing.JPasswordField newpass1;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
